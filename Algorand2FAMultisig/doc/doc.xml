<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Algorand2FAMultisig</name>
    </assembly>
    <members>
        <member name="T:Algorand2FAMultisig.Controllers.MultisigController">
            <summary>
            API controller
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.#ctor(Microsoft.Extensions.Logging.ILogger{Algorand2FAMultisig.Controllers.MultisigController},Microsoft.Extensions.Configuration.IConfiguration,Algorand2FAMultisig.Repository.Interface.IAuthenticatorApp,Algorand2FAMultisig.Repository.Interface.IStorage)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
            <param name="authenticatorApp"></param>
            <param name="storage"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.SetAuthUser(System.String)">
            <summary>
            For testing purposes only
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.GetAuthUser">
            <summary>
            For testing purposes only
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.ComputeSHA256Hash(System.String)">
            <summary>
            SHA256
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.UniformTxtCode(System.String)">
            <summary>
            Unifies the code.. Trim and remove -.
            </summary>
            <param name="txtCode"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.ComputeSHA256HashBytes(System.String)">
            <summary>
            SHA256
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.CreateSeed(System.String)">
            <summary>
            Create seed for authenticated user and sedondary account with configuration password
            </summary>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.GetMasterPasswordHash">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.GetRealm">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.PasswordAccountAddress(System.String)">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.PasswordAccountSign(System.String,System.Byte[])">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.PasswordAccountSignMsig(System.String,System.Byte[])">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.GetAddress(System.String)">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.MyAddress">
            <summary>
            Shows the configured account for this 2FA system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.SetupAuthenticator(System.String,System.String)">
            <summary>
            Ask for QR code
            </summary>
            <param name="accountTitleNoSpaces">The user account or source system. It is shown in the Authenticator app</param>
            <param name="secondaryAccount">Recovery account</param>
            <returns>Model.SetupReturn</returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.ConfirmSetupAuthenticator(System.String,System.String)">
            <summary>
            Test 2FA auth
            </summary>
            <param name="txtCode">Code from authenticator app</param>
            <param name="secondaryAccount">Recovery account</param>
            <returns>Returns the address to be added to multisig</returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.TestValidateTwoFactorPIN(System.String,System.String)">
            <summary>
            Test 2FA auth
            </summary>
            <param name="txtCode">Code from authenticator app</param>
            <param name="secondaryAccount">Recovery account</param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Controllers.MultisigController.SignWithTwoFactorPINMsigTx(System.String,System.Byte[],System.String)">
            <summary>
            Do multisig signing with msg pack object from base64 and return SignedTransaction json object in msgpack base64 with signature
            </summary>
            <param name="txtCode">PIN from authenticator app</param>
            <param name="signedTxMsgPack">signed Tx in msg pack</param>
            <param name="secondaryAccount">Recovery account</param>
            <returns></returns>
        </member>
        <member name="T:Algorand2FAMultisig.Model.Multisig">
            <summary>
            Multisig comm object
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.Multisig.Version">
            <summary>
            Version 1
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.Multisig.Threshold">
            <summary>
            Multisig threshold - number of signatures required
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.Multisig.Signators">
            <summary>
            Signators addresses
            </summary>
        </member>
        <member name="T:Algorand2FAMultisig.Model.SetupReturn">
            <summary>
            2FA setup by Authentication application
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.SetupReturn.Address">
            <summary>
            User's personal address for this service
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.SetupReturn.ManualEntryKey">
            <summary>
            QR code entry value for manual input to Authentication application
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.SetupReturn.QrCodeSetupImageUrl">
            <summary>
            QR code
            </summary>
        </member>
        <member name="P:Algorand2FAMultisig.Model.SetupReturn.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="T:Algorand2FAMultisig.MsigExtension.MsigExtension">
            <summary>
            MsigExtension
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.MsigExtension.MsigExtension.CreateUnsignedMultisigTransaction(Algorand.MultisigAddress,Algorand.Algod.Model.Transactions.Transaction)">
            <summary>
            CreateUnsignedMultisigTransaction creates a multisig transaction from the input tx and the multisig account.
            </summary>
            <param name="from">sign as this multisignature account</param>
            <param name="tx">the transaction to sign</param>
            <returns>SignedTransaction a partially signed multisig transaction</returns>
        </member>
        <member name="M:Algorand2FAMultisig.MsigExtension.MsigExtension.SignMultisigTransaction(Algorand.Algod.Model.Account,Algorand.MultisigAddress,Algorand.Algod.Model.Transactions.Transaction)">
            <summary>
            SignMultisigTransaction creates a multisig transaction from the input and the multisig account.
            </summary>
            <param name="account">Account to sign it with</param>
            <param name="from">sign as this multisignature account</param>
            <param name="tx">the transaction to sign</param>
            <returns>SignedTransaction a partially signed multisig transaction</returns>
        </member>
        <member name="M:Algorand2FAMultisig.MsigExtension.MsigExtension.MergeMultisigTransactions(Algorand.Algod.Model.Transactions.SignedTransaction[])">
            <summary>
            MergeMultisigTransactions merges the given (partially) signed multisig transactions.
            </summary>
            <param name="txs">partially signed multisig transactions to merge. Underlying transactions may be mutated.</param>
            <returns>merged multisig transaction</returns>
        </member>
        <member name="M:Algorand2FAMultisig.MsigExtension.MsigExtension.AppendMultisigTransaction(Algorand.Algod.Model.Account,Algorand.MultisigAddress,Algorand.Algod.Model.Transactions.SignedTransaction)">
            <summary>
            AppendMultisigTransaction appends our signature to the given multisig transaction.
            </summary>
            <param name="account">Account from which to add the signature</param>
            <param name="from">the multisig public identity we are signing for</param>
            <param name="signedTx">the partially signed msig tx to which to append signature</param>
            <returns>merged multisig transaction</returns>
        </member>
        <member name="T:Algorand2FAMultisig.Program">
            <summary>
            Main entry point
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Program.Main(System.String[])">
            <summary>
            Main entry point
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Algorand2FAMultisig.Repository.Implementation.GoogleAuthenticatorApp">
            <summary>
            Google auth app
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.GoogleAuthenticatorApp.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.GoogleAuthenticatorApp.GenerateSetupCode(Algorand.Algod.Model.Account,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Setup code
            </summary>
            <param name="account"></param>
            <param name="accountTitleNoSpaces"></param>
            <param name="accountSecretKey"></param>
            <param name="secretIsBase32"></param>
            <param name="qrPixelsPerModule"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.GoogleAuthenticatorApp.ValidateTwoFactorPIN(System.String,System.String,System.Boolean)">
            <summary>
            Validate pin
            </summary>
            <param name="accountSecretKey"></param>
            <param name="twoFactorCodeFromClient"></param>
            <param name="secretIsBase32"></param>
            <returns></returns>
        </member>
        <member name="T:Algorand2FAMultisig.Repository.Implementation.MockAuthenticatorApp">
            <summary>
            Mock auth app
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.MockAuthenticatorApp.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.MockAuthenticatorApp.GenerateSetupCode(Algorand.Algod.Model.Account,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Setup code
            </summary>
            <param name="account"></param>
            <param name="accountTitleNoSpaces"></param>
            <param name="accountSecretKey"></param>
            <param name="secretIsBase32"></param>
            <param name="qrPixelsPerModule"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.MockAuthenticatorApp.ValidateTwoFactorPIN(System.String,System.String,System.Boolean)">
            <summary>
            Validate pin
            </summary>
            <param name="accountSecretKey"></param>
            <param name="twoFactorCodeFromClient"></param>
            <param name="secretIsBase32"></param>
            <returns></returns>
        </member>
        <member name="T:Algorand2FAMultisig.Repository.Implementation.Storage.StorageFile">
            <summary>
            Simple file persistant storage
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.Storage.StorageFile.#ctor(Microsoft.Extensions.Logging.ILogger{Algorand2FAMultisig.Repository.Implementation.Storage.StorageFile},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.Storage.StorageFile.Exists(System.String,System.String,System.String)">
            <summary>
            Check if configuration exists
            </summary>
            <param name="primaryAccount"></param>
            <param name="twoFactorAccount"></param>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.Storage.StorageFile.Save(System.String,System.String,System.String)">
            <summary>
            Store file to filesystem
            </summary>
            <param name="primaryAccount"></param>
            <param name="twoFactorAccount"></param>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
        <member name="T:Algorand2FAMultisig.Repository.Implementation.Storage.StorageMock">
            <summary>
            Storage in ram for tests
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.Storage.StorageMock.Clear">
            <summary>
            Clear data
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.Storage.StorageMock.Exists(System.String,System.String,System.String)">
            <summary>
            Check if config exists
            </summary>
            <param name="primaryAccount"></param>
            <param name="twoFactorAccount"></param>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Implementation.Storage.StorageMock.Save(System.String,System.String,System.String)">
            <summary>
            Store config
            </summary>
            <param name="primaryAccount"></param>
            <param name="twoFactorAccount"></param>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
        <member name="T:Algorand2FAMultisig.Repository.Interface.IAuthenticatorApp">
            <summary>
            Auth app
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Interface.IAuthenticatorApp.ValidateTwoFactorPIN(System.String,System.String,System.Boolean)">
            <summary>
            Validate pin
            </summary>
            <param name="accountSecretKey"></param>
            <param name="twoFactorCodeFromClient"></param>
            <param name="secretIsBase32"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Interface.IAuthenticatorApp.GenerateSetupCode(Algorand.Algod.Model.Account,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Generate setup code
            </summary>
            <param name="account"></param>
            <param name="accountTitleNoSpaces"></param>
            <param name="accountSecretKey"></param>
            <param name="secretIsBase32"></param>
            <param name="qrPixelsPerModule"></param>
            <returns></returns>
        </member>
        <member name="T:Algorand2FAMultisig.Repository.Interface.IStorage">
            <summary>
            Storage interface.
            </summary>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Interface.IStorage.Exists(System.String,System.String,System.String)">
            <summary>
            Check if configuration of accounts already exists
            </summary>
            <param name="primaryAccount"></param>
            <param name="twoFactorAccount"></param>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Algorand2FAMultisig.Repository.Interface.IStorage.Save(System.String,System.String,System.String)">
            <summary>
            Stores the configuration of accounts
            </summary>
            <param name="primaryAccount"></param>
            <param name="twoFactorAccount"></param>
            <param name="secondaryAccount"></param>
            <returns></returns>
        </member>
    </members>
</doc>

apiVersion: v1
kind: Namespace
metadata:
  name: algo2fa
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: algo2fa-web-testnet-deployment
  namespace: algo2fa
spec:
  selector:
    matchLabels:
      app: algo2fa-web-testnet
  replicas: 3
  template:
    metadata:
      labels:
        app: algo2fa-web-testnet
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
        - name: algo2fa-web-testnet
          image: scholtz2/algorand-2fa-multisig:1.2023.09.22-beta
          imagePullPolicy: Always
          ports: 
            - containerPort: 80
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 5  
            failureThreshold: 2
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 20
            timeoutSeconds: 5  
            failureThreshold: 2
            terminationGracePeriodSeconds: 1
          volumeMounts:
            - name: algo2fa-testnet-conf
              mountPath: /app/appsettings.json
              subPath: appsettings.json
            - name: algo2fa-testnet-pvc
              mountPath: /app/Data
      volumes:
        - name: algo2fa-testnet-conf
          configMap:
            name: algo2fa-testnet-conf
        - name: algo2fa-testnet-pvc
          persistentVolumeClaim:
            claimName: algo2fa-testnet-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo2fa-testnet-pvc
  namespace: algo2fa
spec:
  storageClassName: nfs-slow-retain
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---

apiVersion: v1
kind: Service
metadata:
  name: algo2fa-service-testnet
  namespace: algo2fa
spec:
  type: ClusterIP
  selector:
    app: algo2fa-web-testnet
  ports:
    - name: http
      protocol: TCP
      appProtocol: http
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-2famsig-testnet.k8s.aramid.finance
  namespace: algo2fa
  annotations: 
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  tls:
  - hosts:
    - 2famsig-testnet.k8s.aramid.finance
    secretName: tls-2famsig-testnet.k8s.aramid.finance
  rules:
  - host: 2famsig-testnet.k8s.aramid.finance
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: algo2fa-service-testnet
            port:
              number: 80